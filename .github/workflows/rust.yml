name: Rust

on:
  pull_request:
    branches: [ "main" ]

env:
  RUSTFLAGS: -C strip=symbols
  CARGO_TERM_COLOR: always
  WASM_BUILD_CLEAN_TARGET: 1

jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for comparing changes

    - name: Install stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy, rustfmt
        override: true

    - name: Create change detection script
      run: |
        cat > detect-changes.sh << 'EOF'
        #!/bin/bash
        set -e

        # Function to extract crate name from path
        get_crate_name() {
            local file="$1"
            if [[ $file == crates/* ]]; then
                echo "$file" | cut -d'/' -f2
            fi
        }

        # Get changed files compared to the base branch
        changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)

        # Get unique crate names that have changes
        declare -A changed_crates
        for file in $changed_files; do
            crate_name=$(get_crate_name "$file")
            if [ ! -z "$crate_name" ]; then
                changed_crates["$crate_name"]=1
            fi
        done

        # Output the changed crates
        if [ ${#changed_crates[@]} -eq 0 ]; then
            echo "No changes in any crates"
            exit 0
        fi

        # Create the cargo package list for commands
        packages=""
        for crate in "${!changed_crates[@]}"; do
            packages="$packages -p $crate"
        done
        echo "CHANGED_PACKAGES=$packages" >> $GITHUB_ENV

        # Check if any Rust files were changed (for fmt)
        if echo "$changed_files" | grep -q "\.rs$"; then
            echo "RUST_FILES_CHANGED=true" >> $GITHUB_ENV
        fi
        EOF
        chmod +x detect-changes.sh
        
    - name: Detect changes
      run: ./detect-changes.sh
        
    - name: Build changed crates
      if: env.CHANGED_PACKAGES
      run: cargo build --verbose ${{ env.CHANGED_PACKAGES }}

    - name: Run tests for changed crates
      if: env.CHANGED_PACKAGES
      run: cargo test --verbose --release ${{ env.CHANGED_PACKAGES }}

    - name: Run fmt
      if: env.RUST_FILES_CHANGED == 'true'
      run: cargo fmt --all -- --check

    - name: Run clippy on changed crates
      if: env.CHANGED_PACKAGES
      run: cargo clippy --release --locked ${{ env.CHANGED_PACKAGES }} -- -D warnings 
  
  coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comparing changes
      
      - name: Install Rust
        run: rustup update stable
        
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Create change detection script
        run: |
          cat > detect-changes.sh << 'EOF'
          #!/bin/bash
          set -e

          # Function to extract crate name from path
          get_crate_name() {
              local file="$1"
              if [[ $file == crates/* ]]; then
                  echo "$file" | cut -d'/' -f2
              fi
          }

          # Get changed files compared to the base branch
          changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)

          # Get unique crate names that have changes
          declare -A changed_crates
          for file in $changed_files; do
              crate_name=$(get_crate_name "$file")
              if [ ! -z "$crate_name" ]; then
                  changed_crates["$crate_name"]=1
              fi
          done

          # Output the changed crates
          if [ ${#changed_crates[@]} -eq 0 ]; then
              echo "No changes in any crates"
              exit 0
          fi

          # Create the cargo package list for commands
          packages=""
          for crate in "${!changed_crates[@]}"; do
              packages="$packages -p $crate"
          done
          echo "CHANGED_PACKAGES=$packages" >> $GITHUB_ENV
          EOF
          chmod +x detect-changes.sh

      - name: Detect changes
        run: ./detect-changes.sh
        
      - name: Generate code coverage for changed crates
        if: env.CHANGED_PACKAGES
        run: cargo llvm-cov ${{ env.CHANGED_PACKAGES }} --all-features --lcov --output-path lcov.info
        
      - name: Upload coverage to Codecov
        if: env.CHANGED_PACKAGES
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          files: lcov.info
          fail_ci_if_error: true
